# Generated by Django 5.2 on 2025-04-18 09:03

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the amenity (e.g., Air Conditioning, Parking)', max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly version of the name.', max_length=110, unique=True)),
            ],
            options={
                'verbose_name': 'Amenity',
                'verbose_name_plural': 'Amenities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Type of the property (e.g., Apartment, House)', max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly version of the name, auto-generated if blank.', max_length=110, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description of the property type.', null=True)),
            ],
            options={
                'verbose_name': 'Property Type',
                'verbose_name_plural': 'Property Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Catchy title for the property listing.', max_length=250)),
                ('description', models.TextField(help_text='Detailed description of the property.')),
                ('address_line_1', models.CharField(help_text='Street address, building name/number, floor, etc.', max_length=255)),
                ('address_line_2', models.CharField(blank=True, help_text='Additional address details (Optional)', max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, help_text='Optional Latitude for mapping.', max_digits=10)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, help_text='Optional Longitude for mapping.', max_digits=10)),
                ('price_per_month', models.DecimalField(decimal_places=2, help_text='Rental price per month (e.g., in MMK).', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Security deposit amount.', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('bedrooms', models.PositiveIntegerField(default=1, help_text='Number of bedrooms.')),
                ('bathrooms', models.DecimalField(decimal_places=1, default=1.0, help_text='Number of bathrooms (e.g., 1.0, 1.5, 2.0).', max_digits=3)),
                ('area_sqft', models.PositiveIntegerField(blank=True, help_text='Area in square feet.', null=True)),
                ('is_furnished', models.BooleanField(default=False, help_text='Is the property furnished?')),
                ('pet_policy', models.CharField(choices=[('NO', 'No Pets Allowed'), ('CA', 'Cats Only'), ('DO', 'Dogs Only'), ('AL', 'Pets Allowed'), ('CB', 'Case by Case')], default='NO', max_length=2)),
                ('parking_type', models.CharField(choices=[('NO', 'No Parking'), ('ST', 'Street Parking'), ('DR', 'Driveway'), ('GA', 'Garage'), ('AS', 'Assigned Spot')], default='NO', max_length=2)),
                ('availability_status', models.CharField(choices=[('AV', 'Available'), ('RE', 'Rented'), ('PE', 'Pending Lease'), ('UN', 'Unavailable')], default='AV', help_text='Current availability status.', max_length=2)),
                ('available_from_date', models.DateField(blank=True, help_text='Date the property becomes available for move-in.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amenities', models.ManyToManyField(blank=True, help_text='Select available amenities.', related_name='properties', to='properties.amenity')),
                ('owner', models.ForeignKey(help_text='The user (Landlord) who owns this property.', on_delete=django.db.models.deletion.CASCADE, related_name='properties_owned', to=settings.AUTH_USER_MODEL)),
                ('township', models.ForeignKey(help_text='The specific Township where the property is located (Yangon/Mandalay).', on_delete=django.db.models.deletion.PROTECT, related_name='properties', to='locations.township')),
                ('property_type', models.ForeignKey(blank=True, help_text='The type of property.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='properties', to='properties.propertytype')),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Image file.', upload_to='property_images/')),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image.', max_length=200, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(help_text='The property this image belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='properties.property')),
            ],
            options={
                'verbose_name': 'Property Image',
                'verbose_name_plural': 'Property Images',
                'ordering': ['order', '-is_primary'],
            },
        ),
    ]
